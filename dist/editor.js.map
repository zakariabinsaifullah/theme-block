{"version":3,"sources":["webpack://webackstop-guten-blocks/external [\"wp\",\"blockEditor\"]","webpack://webackstop-guten-blocks/external [\"wp\",\"blocks\"]","webpack://webackstop-guten-blocks/external [\"wp\",\"i18n\"]","webpack://webackstop-guten-blocks/./src/blocks/section-block/attributes.js","webpack://webackstop-guten-blocks/external [\"wp\",\"components\"]","webpack://webackstop-guten-blocks/external [\"wp\",\"element\"]","webpack://webackstop-guten-blocks/./src/blocks/section-block/edit.js","webpack://webackstop-guten-blocks/./src/blocks/section-block/index.js"],"names":["wp","blockEditor","blocks","i18n","sectionId","type","default","padding","top","left","right","bottom","pressed","notPressed","bgColor","bgImage","bgPositions","enableOverlay","overlayType","components","element","colors","name","color","overlay","label","value","positions","this","props","className","attributes","setAttributes","InspectorControls","PanelBody","title","__","initialOpen","TextControl","onChange","values","newValue","ButtonGroup","style","paddingBottom","marginTop","Button","isSmall","isPressed","onClick","ColorPalette","MediaUpload","onSelect","newImage","sizes","full","url","render","open","icon","SelectControl","options","ToggleControl","checked","id","paddingTop","paddingLeft","paddingRight","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","InnerBlocks","allowedBlocks","Component","registerBlockType","description","category","keywords","edit","save"],"mappings":"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","file":"editor.js","sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = wp.blockEditor;","var __WEBPACK_NAMESPACE_OBJECT__ = wp.blocks;","var __WEBPACK_NAMESPACE_OBJECT__ = wp.i18n;","// All attributes \r\nconst attributes = {\r\n    sectionId: {\r\n        type: 'string',\r\n        default: null\r\n    },\r\n    padding: {\r\n        type: 'object', \r\n        default: {\r\n            top: '150px',\r\n            left: '0',\r\n            right: '0',\r\n            bottom: '150px',\r\n        }\r\n    },\r\n    pressed: {\r\n        type: 'boolean',\r\n        default: true\r\n    },\r\n    notPressed: {\r\n        type: 'boolean',\r\n        default: false\r\n    },\r\n    bgColor: {\r\n        type: 'string',\r\n        default: null,\r\n    },\r\n    bgImage: {\r\n        type: 'string',\r\n        default: null\r\n    },\r\n    bgPositions: {\r\n        type: 'string',\r\n        default: 'center center'\r\n    },\r\n    enableOverlay: {\r\n        type: 'boolean',\r\n        default: false\r\n    },\r\n    overlayType: {\r\n        type: 'string',\r\n        default: null,\r\n    }\r\n}\r\nexport default attributes; ","var __WEBPACK_NAMESPACE_OBJECT__ = wp.components;","var __WEBPACK_NAMESPACE_OBJECT__ = wp.element;","import { InnerBlocks, InspectorControls, MediaUpload } from '@wordpress/block-editor';\r\nimport { Button, ButtonGroup, ColorPalette, PanelBody, SelectControl, TextControl, ToggleControl, __experimentalBoxControl as BoxControl } from '@wordpress/components';\r\nimport { Component } from '@wordpress/element';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nconst colors = [\r\n    { \r\n        name: 'Green', \r\n        color: '#0e9b75'\r\n    },\r\n    { \r\n        name: 'Red', \r\n        color: '#ff0000'\r\n    },\r\n    { \r\n        name: 'Black', \r\n        color: '#000000'\r\n    },\r\n    { \r\n        name: 'White', \r\n        color: '#ffffff'\r\n    },\r\n    { \r\n        name: 'Light Yellow', \r\n        color: '#E9F7CA'\r\n    }\r\n];\r\nconst overlay = [\r\n    {\r\n        label: 'Select Overlay Type',\r\n        value: null\r\n    },\r\n    {\r\n        label: 'Black',\r\n        value: 'black_overlay'\r\n    },\r\n    {\r\n        label: 'White',\r\n        value: 'white_overlay'\r\n    },\r\n];\r\n\r\nconst positions = [\r\n    {\r\n        label: 'Top Center',\r\n        value: 'top center'\r\n    }, \r\n    {\r\n        label: 'Center Center',\r\n        value: 'center center'\r\n    },\r\n    {\r\n        label: 'Bottom Center',\r\n        value: 'bottom center'\r\n    }\r\n]\r\n\r\nclass SectionBlock extends Component {\r\n    render() {\r\n        const { className, attributes, setAttributes } = this.props;\r\n        const { sectionId, padding, pressed, notPressed, bgColor, bgImage, enableOverlay, overlayType, bgPositions } = attributes; \r\n        return (\r\n            <div>\r\n                <InspectorControls>        \r\n                    <PanelBody \r\n                        title={__(\"Section Block Settings\")}\r\n                        initialOpen= { true }\r\n                    >\r\n                        <TextControl\r\n                            label=\"Section ID\"\r\n                            onChange={ ( sectionId ) => setAttributes( { sectionId } ) }\r\n                            value={ sectionId }\r\n                        />\r\n                        <BoxControl\r\n                            values={ padding }\r\n                            label={ __( \"Section Padding\" ) }\r\n                            onChange={ \r\n                                ( newValue ) => setAttributes({\r\n                                    ...padding,\r\n                                    padding: {\r\n                                        top: newValue.top,\r\n                                        left: newValue.left,\r\n                                        right: newValue.right,\r\n                                        bottom: newValue.bottom,\r\n                                    } \r\n                                })\r\n                            }\r\n                        />\r\n                        <ButtonGroup \r\n                            style={{ paddingBottom: 20, marginTop: 10 }}\r\n                        >\r\n                            <Button \r\n                                isSmall = { true }\r\n                                isPressed={ pressed }\r\n                                onClick={ () => setAttributes({ \r\n                                    pressed: !pressed, \r\n                                    notPressed: !notPressed, \r\n                                    bgImage: null\r\n                                }) }\r\n                            >\r\n                                Color Background\r\n                            </Button>\r\n                            <Button \r\n                                isSmall = { true }\r\n                                isPressed={ notPressed }\r\n                                onClick={ () => setAttributes({ \r\n                                    pressed: !pressed, \r\n                                    notPressed: !notPressed,\r\n                                    bgColor: null\r\n                                }) }\r\n                            >\r\n                                Image Background\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                        {\r\n                            pressed &&\r\n                            <ColorPalette\r\n                                colors={ colors }\r\n                                onChange={ ( bgColor ) => setAttributes( { bgColor } ) }\r\n                                value={ bgColor }\r\n                            />\r\n                        }\r\n                        {\r\n                           notPressed &&\r\n                           <>\r\n                                <MediaUpload\r\n                                    onSelect={ (newImage) => setAttributes({ bgImage: newImage.sizes.full.url }) }\r\n                                    type=\"image\"\r\n                                    value={ bgImage }\r\n                                    render={ ( { open } ) => (\r\n                                        <Button\r\n                                            className=\"editor-media-placeholder__button is-button is-default is-large\"\r\n                                            icon=\"upload\"\r\n                                            onClick={ open }>\r\n                                            Add Background Image\r\n                                        </Button>\r\n                                    )}\r\n                                />\r\n                                <SelectControl\r\n                                    label=\"Background Position\"\r\n                                    options={ positions }\r\n                                    onChange={ ( bgPositions ) => { setAttributes( { bgPositions } ) } }\r\n                                    value={ bgPositions }\r\n                                />\r\n                                <ToggleControl\r\n                                    label=\"Enable Overlay\"\r\n                                    checked={ enableOverlay }\r\n                                    onChange={ () => setAttributes ({ enableOverlay: ! enableOverlay }) }\r\n                                />\r\n                                {\r\n                                    enableOverlay ?\r\n                                    <SelectControl\r\n                                        label=\"Overlay Type\"\r\n                                        options={ overlay }\r\n                                        onChange={ ( overlayType ) => { setAttributes( { overlayType } ) } }\r\n                                        value={ overlayType }\r\n                                    />\r\n                                    :\r\n                                    setAttributes({ overlayType: null })\r\n                                }\r\n                            </>\r\n                        }\r\n                    </PanelBody>\r\n                </InspectorControls>\r\n                <section \r\n                    className={ `section-block ${className} ${overlayType}` } \r\n                    id={ sectionId }\r\n                    style={{\r\n                        paddingTop: padding.top,\r\n                        paddingBottom: padding.bottom,\r\n                        paddingLeft: padding.left,\r\n                        paddingRight: padding.right,\r\n                        backgroundColor: bgColor,\r\n                        backgroundImage: `url(${bgImage})`,\r\n                        backgroundSize: 'cover',\r\n                        backgroundPosition: bgPositions,\r\n                        backgroundRepeat: 'no-repeat'\r\n                    }}\r\n                >\r\n                    <div className=\"container\">\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"col-12\">\r\n                                <InnerBlocks\r\n                                    allowedBlocks={ true }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SectionBlock;","import { InnerBlocks } from '@wordpress/block-editor';\r\nimport { registerBlockType } from '@wordpress/blocks';\r\nimport { __ } from '@wordpress/i18n';\r\nimport attributes from './attributes';\r\nimport edit from './edit';\r\nimport './editor.scss';\r\n\r\nregisterBlockType('gmtb-blocks/section-block', {\r\n    title: __( 'Section Block' ),\r\n    description: __( 'Section Block includes all Gutenberg Blocks' ),\r\n    category: 'theme-blocks', // new category \r\n    icon: 'media-document', // dashicon \r\n    keywords: [ 'section block' ],\r\n    edit: edit,\r\n    attributes,\r\n    save: ({ attributes }) => {\r\n        const { sectionId, padding, bgColor, bgImage, className, overlayType, bgPositions } = attributes;\r\n        return(\r\n            <section \r\n                className={ `section-block ${className} ${overlayType}` } \r\n                id={ sectionId }\r\n                style={{\r\n                    paddingTop: padding.top,\r\n                    paddingBottom: padding.bottom,\r\n                    paddingLeft: padding.left,\r\n                    paddingRight: padding.right,\r\n                    backgroundColor: bgColor,\r\n                    backgroundImage: `url(${bgImage})`,\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: bgPositions,\r\n                    backgroundRepeat: 'no-repeat'\r\n                }}\r\n            >\r\n                <div className=\"container\">\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"col-12\">\r\n                            <InnerBlocks.Content />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n})\r\n"],"sourceRoot":""}